"""empty message

Revision ID: 00d245aba410
Revises: 550d4dc5bd1f
Create Date: 2024-02-08 20:40:48.692024

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '00d245aba410'
down_revision: Union[str, None] = '550d4dc5bd1f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('user_status_id', sa.Integer(), nullable=False),
    sa.Column('phone_number', sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20), nullable=False),
    sa.Column('avatar_id', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('phone_verified_at', sa.DateTime(), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['avatar_id'], ['avatar.id'], ),
    sa.ForeignKeyConstraint(['user_status_id'], ['user_status.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.drop_table('user')
    op.drop_constraint('ad_favourite_user_id_fkey', 'ad_favourite', type_='foreignkey')
    op.create_foreign_key(None, 'ad_favourite', 'users', ['user_id'], ['id'])
    op.drop_constraint('advertisement_user_id_fkey', 'advertisement', type_='foreignkey')
    op.create_foreign_key(None, 'advertisement', 'users', ['user_id'], ['id'])
    op.drop_constraint('booking_user_id_fkey', 'booking', type_='foreignkey')
    op.create_foreign_key(None, 'booking', 'users', ['user_id'], ['id'])
    op.drop_constraint('review_user_id_fkey', 'review', type_='foreignkey')
    op.create_foreign_key(None, 'review', 'users', ['user_id'], ['id'])
    op.drop_constraint('user__user_field_user_id_fkey', 'user__user_field', type_='foreignkey')
    op.create_foreign_key(None, 'user__user_field', 'users', ['user_id'], ['id'])
    op.drop_constraint('user_notification_user_id_fkey', 'user_notification', type_='foreignkey')
    op.create_foreign_key(None, 'user_notification', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_notification', type_='foreignkey')
    op.create_foreign_key('user_notification_user_id_fkey', 'user_notification', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'user__user_field', type_='foreignkey')
    op.create_foreign_key('user__user_field_user_id_fkey', 'user__user_field', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'review', type_='foreignkey')
    op.create_foreign_key('review_user_id_fkey', 'review', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'booking', type_='foreignkey')
    op.create_foreign_key('booking_user_id_fkey', 'booking', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'advertisement', type_='foreignkey')
    op.create_foreign_key('advertisement_user_id_fkey', 'advertisement', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'ad_favourite', type_='foreignkey')
    op.create_foreign_key('ad_favourite_user_id_fkey', 'ad_favourite', 'user', ['user_id'], ['id'])
    op.create_table('user',
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('user_status_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('avatar_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_verified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('email_verified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['avatar_id'], ['avatar.id'], name='user_avatar_id_fkey'),
    sa.ForeignKeyConstraint(['user_status_id'], ['user_status.id'], name='user_user_status_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key')
    )
    op.drop_table('users')
    # ### end Alembic commands ###
